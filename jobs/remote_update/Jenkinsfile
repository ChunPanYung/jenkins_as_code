def remote = [name: 'sshConnection', host: 'cloud.lan', user: 'server',
    allowAnyHosts: true]

pipeline {
    agent any
    options {
        skipDefaultCheckout() // Manual checkout stage
    }
    environment {
        withCredentials([sshUserPrivateKey(credentialsId: 'server_ssh',
            keyFileVariable: 'sshKeyFile')]) {
            remote.identityFile = sshKeyFile
        }
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', branches: [[name: '**']],
                    extensions: [
                        [$class: 'SparseCheckoutPaths',
                         sparseCheckoutPaths: [[path: 'jobs/remote_update']]],
                        [$class: 'CloneOption', depth: 1, noTags: false,
                         reference: '', shallow: true]
                    ],
                    userRemoteConfigs: [
                        [url: 'https://github.com/ChunPanYung/jenkins_as_code']
                    ]
                ])
            }
        } // End stage Checkout

        stage('Remote SSH') {
            steps {



                sshCommand remote: remote, command: 'ls'

            }
        } // End stage Remote SSH
    } // End stages
}
