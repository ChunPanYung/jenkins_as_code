pipeline {
    agent any
    options {
        skipDefaultCheckout(true) // Required for clean before checkout
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', branches: [[name: '**']],
                    extensions: [
                        [$class: 'SparseCheckoutPaths',
                         sparseCheckoutPaths: [[path: 'jobs/docker_images']]],
                        [$class: 'CloneOption', depth: 1, noTags: false,
                         reference: '', shallow: true]
                    ],
                    userRemoteConfigs: [
                        [url: 'https://github.com/ChunPanYung/jenkins_as_code']
                    ]
                ])
            }
        } // End stage Checkout
        stage('Debug') {
            when {
                anyOf { branch 'dev' }
            }
            steps {
                sh 'tree'
            }
        } // End stage
        stage('Update all docker images...') {
            steps {
                sh './jobs/docker_images/upgrade_all_images.sh'
            }
        } // End stage
        stage('Prune all unused docker images...') {
            steps {
                sh '''#!/bin/bash
                    docker image prune --force
                '''
            }
        } // End stage
    } // End stages
    post {
        always {
            echo 'List all docker images...'
            sh 'docker images'
        }
        failure {
            echo 'Job failed!'
            cleanWs()
        }
    }
}
